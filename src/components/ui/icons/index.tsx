import type React from "react"
import { cn } from "@/lib/utils"

interface IconProps extends React.SVGProps<SVGSVGElement> {
  className?: string
  size?: "sm" | "md" | "lg" | "xxl"
  variant?: "stroke" | "filled"
}

const sizeMap = {
  sm: "w-4 h-4",
  md: "w-5 h-5",
  lg: "w-6 h-6",
  xxl: "w-24 h-24",
}

const Plus = ({ className, size = "md", variant = "stroke", ...props }: IconProps) => {
  return (
    <svg
      className={cn(sizeMap[size], className)}
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <path d="M8 12H16"/>
      <path d="M12 16V8"/>
      <path d="M9 22H15C20 22 22 20 22 15V9C22 4 20 2 15 2H9C4 2 2 4 2 9V15C2 20 4 22 9 22Z"/>
    </svg>
  )
}

const Minus = ({ className, size = "md", variant = "stroke", ...props }: IconProps) => {
  return (
    <svg
      className={cn(sizeMap[size], className)}
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <path d="M8 12H16"/>
      <path d="M9 22H15C20 22 22 20 22 15V9C22 4 20 2 15 2H9C4 2 2 4 2 9V15C2 20 4 22 9 22Z"/>
    </svg>
  )
}

const Info = ({ className, size = "md", variant = "stroke", ...props }: IconProps) => {
  return (
    <svg
      className={cn(sizeMap[size], className)}
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <path d="M12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C17.5 22 22 17.5 22 12C22 6.5 17.5 2 12 2Z"/>
      <path d="M12 16L12 11"/>
      <path d="M12.0055 8L11.9965 8" />
    </svg>
  )
}

const ThreeDots = ({ className, size = "md", variant = "stroke", ...props }: IconProps) => {
  return (
    <svg
      className={cn(sizeMap[size], className)}
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <path d="M12 22C17.5 22 22 17.5 22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22Z" />
      <path d="M15.9965 12H16.0054" />
      <path d="M11.9955 12H12.0045" />
      <path d="M7.99451 12H8.00349" />
    </svg>
  )
}

const Trash = ({ className, size = "md", variant = "stroke", ...props }: IconProps) => {
  return (
    <svg
      className={cn(sizeMap[size], className)}
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <path d="M21 5.98047C17.67 5.65047 14.32 5.48047 10.98 5.48047C9 5.48047 7.02 5.58047 5.04 5.78047L3 5.98047" />
      <path d="M8.5 4.97L8.72 3.66C8.88 2.71 9 2 10.69 2H13.31C15 2 15.13 2.75 15.28 3.67L15.5 4.97" />
      <path d="M18.85 9.14062L18.2 19.2106C18.09 20.7806 18 22.0006 15.21 22.0006H8.79002C6.00002 22.0006 5.91002 20.7806 5.80002 19.2106L5.15002 9.14062" />
      <path d="M10.33 16.5H13.66" />
      <path d="M9.5 12.5H14.5" />
    </svg>
  )
}

const ShootingStar = ({ className, size = "md", variant = "stroke", ...props }: IconProps) => {
  return (
    <svg
      className={cn(sizeMap[size], className)}
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2.25"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <path d="M6.71 4.14097L6.78001 7.93095C6.79001 8.45095 6.45996 9.14097 6.03996 9.45097L3.55998 11.3309C1.96998 12.5309 2.22998 14.001 4.12998 14.601L7.35996 15.6109C7.89996 15.7809 8.46996 16.371 8.60996 16.921L9.37998 19.8609C9.98998 22.1809 11.51 22.411 12.77 20.371L14.53 17.5209C14.85 17.0009 15.61 16.611 16.21 16.641L19.55 16.811C21.94 16.931 22.62 15.551 21.06 13.731L19.08 11.4309C18.71 11.0009 18.54 10.201 18.71 9.66096L19.7199 6.43095C20.3099 4.53095 19.25 3.48096 17.36 4.10096L14.41 5.07096C13.91 5.23096 13.16 5.12095 12.74 4.81095L9.65995 2.59095C7.99995 1.39095 6.67 2.09097 6.71 4.14097Z" />
      <path d="M2.09003 22.0007L5.12 18.9707" />
    </svg>
  )
}

const SearchHeart = ({ className, size = "md", variant = "stroke", ...props }: IconProps) => {
  return (
    <svg
      className={cn(sizeMap[size], className)}
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <path d="M21 11.5C21 16.75 16.75 21 11.5 21C6.25 21 2 16.75 2 11.5C2 6.25 6.25 2 11.5 2" />
      <path d="M22 22L20 20" />
      <path d="M14.5 6.1291C14.15 5.0291 14.56 3.6591 15.72 3.2891C16.33 3.0891 17.08 3.2591 17.51 3.8491C17.91 3.2391 18.69 3.0991 19.29 3.2891C20.45 3.6591 20.86 5.0291 20.51 6.1291C19.96 7.8791 18.04 8.7891 17.51 8.7891C16.97 8.7891 15.07 7.8991 14.5 6.1291Z" stroke-width="1.5"/>
    </svg>
  )
}

const Ranking = ({ className, size = "md", variant = "stroke", ...props }: IconProps) => {
  return (
    <svg
      className={cn(sizeMap[size], className)}
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <path d="M8.67 14H4C2.9 14 2 14.9 2 16V22H8.67V14Z"/>
      <path d="M13.33 10H10.66C9.56003 10 8.66003 10.9 8.66003 12V22H15.33V12C15.33 10.9 14.44 10 13.33 10Z"/>
      <path d="M20 17H15.33V22H22V19C22 17.9 21.1 17 20 17Z"/>
      <path d="M12.52 2.0708L13.05 3.1308C13.12 3.2808 13.31 3.42079 13.47 3.44079L14.43 3.6008C15.04 3.7008 15.19 4.15078 14.75 4.58078L14 5.33078C13.87 5.46078 13.8 5.70079 13.84 5.87079L14.05 6.7908C14.22 7.5208 13.83 7.80081 13.19 7.42081L12.29 6.89081C12.13 6.79081 11.86 6.79081 11.7 6.89081L10.8 7.42081C10.16 7.80081 9.76998 7.5208 9.93998 6.7908L10.15 5.87079C10.19 5.70079 10.12 5.45078 9.98999 5.33078L9.24999 4.59079C8.80999 4.15079 8.94999 3.71078 9.56999 3.61078L10.53 3.4508C10.69 3.4208 10.88 3.28081 10.95 3.14081L11.48 2.08078C11.77 1.50078 12.23 1.5008 12.52 2.0708Z" stroke-width="1.5" />
    </svg>
  )
}

const Profile = ({ className, size = "md", variant = "stroke", ...props }: IconProps) => {
  return (
    <svg
      className={cn(sizeMap[size], className)}
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <path d="M12.12 12.7805C12.05 12.7705 11.96 12.7705 11.88 12.7805C10.12 12.7205 8.71997 11.2805 8.71997 9.51047C8.71997 7.70047 10.18 6.23047 12 6.23047C13.81 6.23047 15.28 7.70047 15.28 9.51047C15.27 11.2805 13.88 12.7205 12.12 12.7805Z"/>
      <path d="M18.74 19.3805C16.96 21.0105 14.6 22.0005 12 22.0005C9.40001 22.0005 7.04001 21.0105 5.26001 19.3805C5.36001 18.4405 5.96001 17.5205 7.03001 16.8005C9.77001 14.9805 14.25 14.9805 16.97 16.8005C18.04 17.5205 18.64 18.4405 18.74 19.3805Z"/>
      <path d="M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z"/>
    </svg>
  )
}

const LogOut = ({ className, size = "md", variant = "stroke", ...props }: IconProps) => {
  return (
    <svg
      className={cn(sizeMap[size], className)}
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <path d="M8.90002 7.56023C9.21002 3.96023 11.06 2.49023 15.11 2.49023H15.24C19.71 2.49023 21.5 4.28023 21.5 8.75023V15.2702C21.5 19.7402 19.71 21.5302 15.24 21.5302H15.11C11.09 21.5302 9.24002 20.0802 8.91002 16.5402"/>
      <path d="M15 12H3.62"/>
      <path d="M5.85 8.65039L2.5 12.0004L5.85 15.3504"/>
    </svg>
  )
}

const Link = ({ className, size = "md", variant = "stroke", ...props }: IconProps) => {
  return (
    <svg
      className={cn(sizeMap[size], className)}
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <path d="M13 11.0008L21.2 2.80078"/>
      <path d="M22 6.8V2H17.2"/>
      <path d="M11 2H9C4 2 2 4 2 9V15C2 20 4 22 9 22H15C20 22 22 20 22 15V13"/>
    </svg>
  )
}

const ChevronUp = ({ className, size = "md", variant = "stroke", ...props }: IconProps) => {
  return (
    <svg
      className={cn(sizeMap[size], className)}
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <path d="M19.92 15.0506L13.4 8.53062C12.63 7.76063 11.37 7.76063 10.6 8.53062L4.07996 15.0506"  />
    </svg>
  )
}

const ChevronDown = ({ className, size = "md", variant = "stroke", ...props }: IconProps) => {
  return (
    <svg
      className={cn(sizeMap[size], className)}
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <path d="M19.92 8.94922L13.4 15.4692C12.63 16.2392 11.37 16.2392 10.6 15.4692L4.07996 8.94922"  />
    </svg>
  )
}

const ChevronRigth = ({ className, size = "md", variant = "stroke", ...props }: IconProps) => {
  return (
    <svg
      className={cn(sizeMap[size], className)}
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <path d="M8.91003 19.9201L15.43 13.4001C16.2 12.6301 16.2 11.3701 15.43 10.6001L8.91003 4.08008"  />
    </svg>
  )
}

const ChevronLeft = ({ className, size = "md", variant = "stroke", ...props }: IconProps) => {
  return (
    <svg
      className={cn(sizeMap[size], className)}
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <path d="M15 19.9201L8.47997 13.4001C7.70997 12.6301 7.70997 11.3701 8.47997 10.6001L15 4.08008"  />
    </svg>
  )
}

const CrossedEye = ({ className, size = "md", variant = "stroke", ...props }: IconProps) => {
  return (
    <svg
      className={cn(sizeMap[size], className)}
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <path d="M14.53 9.46992L9.47004 14.5299C8.82004 13.8799 8.42004 12.9899 8.42004 11.9999C8.42004 10.0199 10.02 8.41992 12 8.41992C12.99 8.41992 13.88 8.81992 14.53 9.46992Z" />
      <path d="M17.82 5.77047C16.07 4.45047 14.07 3.73047 12 3.73047C8.46997 3.73047 5.17997 5.81047 2.88997 9.41047C1.98997 10.8205 1.98997 13.1905 2.88997 14.6005C3.67997 15.8405 4.59997 16.9105 5.59997 17.7705" />
      <path d="M8.42004 19.5297C9.56004 20.0097 10.77 20.2697 12 20.2697C15.53 20.2697 18.82 18.1897 21.11 14.5897C22.01 13.1797 22.01 10.8097 21.11 9.39969C20.78 8.87969 20.42 8.38969 20.05 7.92969" />
      <path d="M15.5099 12.6992C15.2499 14.1092 14.0999 15.2592 12.6899 15.5192" />
      <path d="M9.47 14.5293L2 21.9993" />
      <path d="M22 2L14.53 9.47" />
    </svg>
  )
}

const Eye = ({ className, size = "md", variant = "stroke", ...props }: IconProps) => {
  return (
    <svg
      className={cn(sizeMap[size], className)}
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <path d="M15.58 11.9999C15.58 13.9799 13.98 15.5799 12 15.5799C10.02 15.5799 8.42004 13.9799 8.42004 11.9999C8.42004 10.0199 10.02 8.41992 12 8.41992C13.98 8.41992 15.58 10.0199 15.58 11.9999Z" />
      <path d="M12 20.2707C15.53 20.2707 18.82 18.1907 21.11 14.5907C22.01 13.1807 22.01 10.8107 21.11 9.4007C18.82 5.8007 15.53 3.7207 12 3.7207C8.46997 3.7207 5.17997 5.8007 2.88997 9.4007C1.98997 10.8107 1.98997 13.1807 2.88997 14.5907C5.17997 18.1907 8.46997 20.2707 12 20.2707Z" />
    </svg>
  )
}

const Search = ({ className, size = "md", variant = "stroke", ...props }: IconProps) => {
  return (
    <svg
      className={cn(sizeMap[size], className)}
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <path d="M11.5 21C16.7467 21 21 16.7467 21 11.5C21 6.25329 16.7467 2 11.5 2C6.25329 2 2 6.25329 2 11.5C2 16.7467 6.25329 21 11.5 21Z" />
      <path d="M22 22L20 20" />
    </svg>
  )
}

const Filter = ({ className, size = "md", variant = "stroke", ...props }: IconProps) => {
  return (
    <svg
      className={cn(sizeMap[size], className)}
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <path d="M5.40002 2.09961H18.6C19.7 2.09961 20.6 2.99961 20.6 4.09961V6.29961C20.6 7.09961 20.1 8.09961 19.6 8.59961L15.3 12.3996C14.7 12.8996 14.3 13.8996 14.3 14.6996V18.9996C14.3 19.5996 13.9 20.3996 13.4 20.6996L12 21.5996C10.7 22.3996 8.90002 21.4996 8.90002 19.8996V14.5996C8.90002 13.8996 8.50002 12.9996 8.10002 12.4996L4.30002 8.49961C3.80002 7.99961 3.40002 7.09961 3.40002 6.49961V4.19961C3.40002 2.99961 4.30002 2.09961 5.40002 2.09961Z"  />
      <path d="M10.93 2.09961L6 9.99961"  />
    </svg>
  )
}

const Tick = ({ className, size = "md", variant = "stroke", ...props }: IconProps) => {
  return (
    <svg
      className={cn(sizeMap[size], className)}
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <path d="M7.75 11.9999L10.58 14.8299L16.25 9.16992"/>
    </svg>
  )
}

/*
---------------------------------------------------------------
ICONS WITH BOTH FILLED AND STROKE VARIANTS
---------------------------------------------------------------
*/

// Both Variants
const Pencil = ({ className, size = "md", variant = "stroke", ...props }: IconProps) => {
  if (variant === "filled") {
    return (
      <svg  
        className={cn(sizeMap[size], className)} 
        viewBox="0 0 24 24" 
        fill="currentColor" 
        stroke="none" {...props}
      >
        <path d="M21 22H3C2.59 22 2.25 21.66 2.25 21.25C2.25 20.84 2.59 20.5 3 20.5H21C21.41 20.5 21.75 20.84 21.75 21.25C21.75 21.66 21.41 22 21 22Z" />
        <path d="M19.02 3.47967C17.08 1.53967 15.18 1.48967 13.19 3.47967L11.98 4.68967C11.88 4.78967 11.84 4.94967 11.88 5.08967C12.64 7.73967 14.76 9.85967 17.41 10.6197C17.45 10.6297 17.49 10.6397 17.53 10.6397C17.64 10.6397 17.74 10.5997 17.82 10.5197L19.02 9.30967C20.01 8.32967 20.49 7.37967 20.49 6.41967C20.5 5.42967 20.02 4.46967 19.02 3.47967Z" />
        <path d="M15.61 11.5308C15.32 11.3908 15.04 11.2508 14.77 11.0908C14.55 10.9608 14.34 10.8208 14.13 10.6708C13.96 10.5608 13.76 10.4008 13.57 10.2408C13.55 10.2308 13.48 10.1708 13.4 10.0908C13.07 9.81078 12.7 9.45078 12.37 9.05078C12.34 9.03078 12.29 8.96078 12.22 8.87078C12.12 8.75078 11.95 8.55078 11.8 8.32078C11.68 8.17078 11.54 7.95078 11.41 7.73078C11.25 7.46078 11.11 7.19078 10.97 6.91078C10.9488 6.86539 10.9283 6.82022 10.9084 6.77532C10.7608 6.442 10.3262 6.34455 10.0684 6.60231L4.33995 12.3308C4.20995 12.4608 4.08995 12.7108 4.05995 12.8808L3.51995 16.7108C3.41995 17.3908 3.60995 18.0308 4.02995 18.4608C4.38995 18.8108 4.88995 19.0008 5.42995 19.0008C5.54995 19.0008 5.66995 18.9908 5.78995 18.9708L9.62995 18.4308C9.80995 18.4008 10.06 18.2808 10.18 18.1508L15.9013 12.4295C16.1608 12.1699 16.0629 11.7245 15.7253 11.5804C15.6873 11.5642 15.6489 11.5476 15.61 11.5308Z" />
      </svg>
    )
  }

  return (
    <svg
      className={cn(sizeMap[size], className)}
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <path d="M13.26 3.59924L5.04997 12.2892C4.73997 12.6192 4.43997 13.2692 4.37997 13.7192L4.00997 16.9592C3.87997 18.1292 4.71997 18.9292 5.87997 18.7292L9.09997 18.1792C9.54997 18.0992 10.18 17.7692 10.49 17.4292L18.7 8.73924C20.12 7.23924 20.76 5.52924 18.55 3.43924C16.35 1.36924 14.68 2.09924 13.26 3.59924Z" />
      <path d="M11.89 5.05078C12.32 7.81078 14.56 9.92078 17.34 10.2008" />
      <path d="M3 22H21" />
    </svg>
  )
}

const Checklist = ({ className, size = "md", variant = "stroke", ...props }: IconProps) => {
  if (variant === "filled") {
    return (
      <svg  
        className={cn(sizeMap[size], className)} 
        viewBox="0 0 24 24" 
        fill="currentColor" 
        stroke="none" {...props}
      >
        <path d="M16.19 2H7.81C4.17 2 2 4.17 2 7.81V16.19C2 19.83 4.17 22 7.81 22H16.19C19.83 22 22 19.83 22 16.19V7.81C22 4.17 19.83 2 16.19 2ZM9.97 14.9L7.72 17.15C7.57 17.3 7.38 17.37 7.19 17.37C7 17.37 6.8 17.3 6.66 17.15L5.91 16.4C5.61 16.11 5.61 15.63 5.91 15.34C6.2 15.05 6.67 15.05 6.97 15.34L7.19 15.56L8.91 13.84C9.2 13.55 9.67 13.55 9.97 13.84C10.26 14.13 10.26 14.61 9.97 14.9ZM9.97 7.9L7.72 10.15C7.57 10.3 7.38 10.37 7.19 10.37C7 10.37 6.8 10.3 6.66 10.15L5.91 9.4C5.61 9.11 5.61 8.63 5.91 8.34C6.2 8.05 6.67 8.05 6.97 8.34L7.19 8.56L8.91 6.84C9.2 6.55 9.67 6.55 9.97 6.84C10.26 7.13 10.26 7.61 9.97 7.9ZM17.56 16.62H12.31C11.9 16.62 11.56 16.28 11.56 15.87C11.56 15.46 11.9 15.12 12.31 15.12H17.56C17.98 15.12 18.31 15.46 18.31 15.87C18.31 16.28 17.98 16.62 17.56 16.62ZM17.56 9.62H12.31C11.9 9.62 11.56 9.28 11.56 8.87C11.56 8.46 11.9 8.12 12.31 8.12H17.56C17.98 8.12 18.31 8.46 18.31 8.87C18.31 9.28 17.98 9.62 17.56 9.62Z" />
      </svg>
    )
  }

  return (
    <svg
      className={cn(sizeMap[size], className)}
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <path d="M12.37 8.88086H17.62"/>
      <path d="M6.38 8.88086L7.13 9.63086L9.38 7.38086"/>
      <path d="M12.37 15.8809H17.62"/>
      <path d="M6.38 15.8809L7.13 16.6309L9.38 14.3809"/>
      <path d="M9 22H15C20 22 22 20 22 15V9C22 4 20 2 15 2H9C4 2 2 4 2 9V15C2 20 4 22 9 22Z"/>
    </svg>
  )
}

const Clipboard = ({ className, size = "md", variant = "stroke", ...props }: IconProps) => {
  if (variant === "filled") {
    return (
      <svg  
        className={cn(sizeMap[size], className)} 
        viewBox="0 0 24 24" 
        fill="currentColor" 
        stroke="none" {...props}
      >
        <path d="M14.35 2H9.65001C8.61001 2 7.76001 2.84 7.76001 3.88V4.82C7.76001 5.86 8.60001 6.7 9.64001 6.7H14.35C15.39 6.7 16.23 5.86 16.23 4.82V3.88C16.24 2.84 15.39 2 14.35 2Z" />
        <path d="M17.24 4.81949C17.24 6.40949 15.94 7.70949 14.35 7.70949H9.65004C8.06004 7.70949 6.76004 6.40949 6.76004 4.81949C6.76004 4.25949 6.16004 3.90949 5.66004 4.16949C4.25004 4.91949 3.29004 6.40949 3.29004 8.11949V17.5295C3.29004 19.9895 5.30004 21.9995 7.76004 21.9995H16.24C18.7 21.9995 20.71 19.9895 20.71 17.5295V8.11949C20.71 6.40949 19.75 4.91949 18.34 4.16949C17.84 3.90949 17.24 4.25949 17.24 4.81949ZM12.38 16.9495H8.00004C7.59004 16.9495 7.25004 16.6095 7.25004 16.1995C7.25004 15.7895 7.59004 15.4495 8.00004 15.4495H12.38C12.79 15.4495 13.13 15.7895 13.13 16.1995C13.13 16.6095 12.79 16.9495 12.38 16.9495ZM15 12.9495H8.00004C7.59004 12.9495 7.25004 12.6095 7.25004 12.1995C7.25004 11.7895 7.59004 11.4495 8.00004 11.4495H15C15.41 11.4495 15.75 11.7895 15.75 12.1995C15.75 12.6095 15.41 12.9495 15 12.9495Z" />
      </svg>
    )
  }

  return (
    <svg
      className={cn(sizeMap[size], className)}
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <path d="M8 12.1992H15" />
      <path d="M8 16.1992H12.38" />
      <path d="M10 6H14C16 6 16 5 16 4C16 2 15 2 14 2H10C9 2 8 2 8 4C8 6 9 6 10 6Z" />
      <path d="M16 4.01953C19.33 4.19953 21 5.42953 21 9.99953V15.9995C21 19.9995 20 21.9995 15 21.9995H9C4 21.9995 3 19.9995 3 15.9995V9.99953C3 5.43953 4.67 4.19953 8 4.01953" />
    </svg>
  )
}

const Home = ({ className, size = "md", variant = "stroke", ...props }: IconProps) => {
  if (variant === "filled") {
    return (
      <svg  
        className={cn(sizeMap[size], className)} 
        viewBox="0 0 24 24" 
        fill="currentColor" 
        stroke="none" {...props}
      >
        <path d="M20.83 8.01002L14.28 2.77002C13 1.75002 11 1.74002 9.72996 2.76002L3.17996 8.01002C2.23996 8.76002 1.66996 10.26 1.86996 11.44L3.12996 18.98C3.41996 20.67 4.98996 22 6.69996 22H17.3C18.99 22 20.59 20.64 20.88 18.97L22.14 11.43C22.32 10.26 21.75 8.76002 20.83 8.01002ZM12.75 18C12.75 18.41 12.41 18.75 12 18.75C11.59 18.75 11.25 18.41 11.25 18V15C11.25 14.59 11.59 14.25 12 14.25C12.41 14.25 12.75 14.59 12.75 15V18Z" />
      </svg>
    )
  }

  return (
    <svg
      className={cn(sizeMap[size], className)}
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <path d="M12 18V15"/>
      <path d="M10.07 2.81985L3.14002 8.36985C2.36002 8.98985 1.86002 10.2998 2.03002 11.2798L3.36002 19.2398C3.60002 20.6598 4.96002 21.8098 6.40002 21.8098H17.6C19.03 21.8098 20.4 20.6498 20.64 19.2398L21.97 11.2798C22.13 10.2998 21.63 8.98985 20.86 8.36985L13.93 2.82985C12.86 1.96985 11.13 1.96985 10.07 2.81985Z"/>
    </svg>
  )
}

const Settings = ({ className, size = "md", variant = "stroke", ...props }: IconProps) => {
  if (variant === "filled") {
    return (
      <svg  
        className={cn(sizeMap[size], className)} 
        viewBox="0 0 24 24" 
        fill="currentColor" 
        stroke="none" {...props}
      >
        <path d="M20.1 9.21945C18.29 9.21945 17.55 7.93945 18.45 6.36945C18.97 5.45945 18.66 4.29945 17.75 3.77945L16.02 2.78945C15.23 2.31945 14.21 2.59945 13.74 3.38945L13.63 3.57945C12.73 5.14945 11.25 5.14945 10.34 3.57945L10.23 3.38945C9.78 2.59945 8.76 2.31945 7.97 2.78945L6.24 3.77945C5.33 4.29945 5.02 5.46945 5.54 6.37945C6.45 7.93945 5.71 9.21945 3.9 9.21945C2.86 9.21945 2 10.0694 2 11.1194V12.8794C2 13.9194 2.85 14.7794 3.9 14.7794C5.71 14.7794 6.45 16.0594 5.54 17.6294C5.02 18.5394 5.33 19.6994 6.24 20.2194L7.97 21.2094C8.76 21.6794 9.78 21.3995 10.25 20.6094L10.36 20.4194C11.26 18.8494 12.74 18.8494 13.65 20.4194L13.76 20.6094C14.23 21.3995 15.25 21.6794 16.04 21.2094L17.77 20.2194C18.68 19.6994 18.99 18.5294 18.47 17.6294C17.56 16.0594 18.3 14.7794 20.11 14.7794C21.15 14.7794 22.01 13.9294 22.01 12.8794V11.1194C22 10.0794 21.15 9.21945 20.1 9.21945ZM12 15.2494C10.21 15.2494 8.75 13.7894 8.75 11.9994C8.75 10.2094 10.21 8.74945 12 8.74945C13.79 8.74945 15.25 10.2094 15.25 11.9994C15.25 13.7894 13.79 15.2494 12 15.2494Z" />
      </svg>
    )
  }

  return (
    <svg
      className={cn(sizeMap[size], className)}
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <path d="M12 15C13.6569 15 15 13.6569 15 12C15 10.3431 13.6569 9 12 9C10.3431 9 9 10.3431 9 12C9 13.6569 10.3431 15 12 15Z" />
      <path d="M2 12.8794V11.1194C2 10.0794 2.85 9.21945 3.9 9.21945C5.71 9.21945 6.45 7.93945 5.54 6.36945C5.02 5.46945 5.33 4.29945 6.24 3.77945L7.97 2.78945C8.76 2.31945 9.78 2.59945 10.25 3.38945L10.36 3.57945C11.26 5.14945 12.74 5.14945 13.65 3.57945L13.76 3.38945C14.23 2.59945 15.25 2.31945 16.04 2.78945L17.77 3.77945C18.68 4.29945 18.99 5.46945 18.47 6.36945C17.56 7.93945 18.3 9.21945 20.11 9.21945C21.15 9.21945 22.01 10.0694 22.01 11.1194V12.8794C22.01 13.9194 21.16 14.7794 20.11 14.7794C18.3 14.7794 17.56 16.0594 18.47 17.6294C18.99 18.5394 18.68 19.6994 17.77 20.2194L16.04 21.2094C15.25 21.6794 14.23 21.3994 13.76 20.6094L13.65 20.4194C12.75 18.8494 11.27 18.8494 10.36 20.4194L10.25 20.6094C9.78 21.3994 8.76 21.6794 7.97 21.2094L6.24 20.2194C5.33 19.6994 5.02 18.5294 5.54 17.6294C6.45 16.0594 5.71 14.7794 3.9 14.7794C2.85 14.7794 2 13.9194 2 12.8794Z" />
    </svg>
  )
}

const Chart = ({ className, size = "md", variant = "stroke", ...props }: IconProps) => {
  if (variant === "filled") {
    return (
      <svg  
        className={cn(sizeMap[size], className)} 
        viewBox="0 0 24 24" 
        fill="currentColor" 
        stroke="none" {...props}
      >
        <path d="M22 2.75H2C1.59 2.75 1.25 2.41 1.25 2C1.25 1.59 1.59 1.25 2 1.25H22C22.41 1.25 22.75 1.59 22.75 2C22.75 2.41 22.41 2.75 22 2.75Z" />
        <path d="M16.67 22.34C16.54 22.6 16.27 22.75 16 22.75C15.89 22.75 15.77 22.72 15.67 22.67L12 20.84L8.33001 22.67C8.23001 22.72 8.11001 22.75 8.00001 22.75C7.73001 22.75 7.46001 22.6 7.33001 22.34C7.14001 21.96 7.29001 21.51 7.67001 21.33L11.25 19.54V17H12.75V19.54L16.33 21.33C16.71 21.51 16.86 21.96 16.67 22.34Z" />
        <path d="M3 2V14.1C3 16 4 17 5.9 17H18.1C20 17 21 16 21 14.1V2H3ZM16.98 8.58L13.83 11.21C13.54 11.45 13.17 11.55 12.82 11.49C12.46 11.43 12.15 11.21 11.96 10.89L10.91 9.14L7.98 11.58C7.84 11.7 7.67 11.75 7.5 11.75C7.29 11.75 7.07 11.66 6.92 11.48C6.65 11.16 6.7 10.69 7.02 10.42L10.17 7.79C10.46 7.55 10.83 7.45 11.18 7.51C11.54 7.57 11.85 7.79 12.04 8.11L13.09 9.86L16.02 7.42C16.34 7.15 16.81 7.2 17.08 7.52C17.34 7.84 17.3 8.31 16.98 8.58Z" />
      </svg>
    )
  }

  return (
    <svg
      className={cn(sizeMap[size], className)}
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <path d="M5.89999 17H18.09C19.99 17 20.99 16 20.99 14.1V2H2.98999V14.1C2.99999 16 3.99999 17 5.89999 17Z" />
      <path d="M2 2H22" />
      <path d="M8 22L12 20V17" />
      <path d="M16 22L12 20" />
      <path d="M7.5 11L10.65 8.37C10.9 8.16 11.23 8.22 11.4 8.5L12.6 10.5C12.77 10.78 13.1 10.83 13.35 10.63L16.5 8" />
    </svg>
  )
}

const Team = ({ className, size = "md", variant = "stroke", ...props }: IconProps) => {
  if (variant === "filled") {
    return (
      <svg  
        className={cn(sizeMap[size], className)} 
        viewBox="0 0 24 24" 
        fill="currentColor" 
        stroke="none" {...props}
      >
        <path d="M17.53 7.77C17.46 7.76 17.39 7.76 17.32 7.77C15.77 7.72 14.54 6.45 14.54 4.89C14.54 3.3 15.83 2 17.43 2C19.02 2 20.32 3.29 20.32 4.89C20.31 6.45 19.08 7.72 17.53 7.77Z" />
        <path d="M20.79 14.7004C19.67 15.4504 18.1 15.7304 16.65 15.5404C17.03 14.7204 17.23 13.8104 17.24 12.8504C17.24 11.8504 17.02 10.9004 16.6 10.0704C18.08 9.8704 19.65 10.1504 20.78 10.9004C22.36 11.9404 22.36 13.6504 20.79 14.7004Z" />
        <path d="M6.44003 7.77C6.51003 7.76 6.58003 7.76 6.65003 7.77C8.20003 7.72 9.43003 6.45 9.43003 4.89C9.43003 3.29 8.14003 2 6.54003 2C4.95003 2 3.66003 3.29 3.66003 4.89C3.66003 6.45 4.89003 7.72 6.44003 7.77Z" />
        <path d="M6.55 12.8506C6.55 13.8206 6.75999 14.7406 7.14 15.5706C5.73 15.7206 4.26 15.4206 3.18 14.7106C1.6 13.6606 1.6 11.9506 3.18 10.9006C4.25 10.1806 5.75999 9.89059 7.18 10.0506C6.77 10.8906 6.55 11.8406 6.55 12.8506Z" />
        <path d="M12.12 15.87C12.04 15.86 11.95 15.86 11.86 15.87C10.02 15.81 8.55005 14.3 8.55005 12.44C8.56005 10.54 10.09 9 12 9C13.9 9 15.44 10.54 15.44 12.44C15.43 14.3 13.97 15.81 12.12 15.87Z" />
        <path d="M8.87005 17.9406C7.36005 18.9506 7.36005 20.6106 8.87005 21.6106C10.59 22.7606 13.41 22.7606 15.13 21.6106C16.64 20.6006 16.64 18.9406 15.13 17.9406C13.42 16.7906 10.6 16.7906 8.87005 17.9406Z" />
      </svg>
    )
  }

  return (
    <svg
      className={cn(sizeMap[size], className)}
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <path d="M18 7.16C17.94 7.15 17.87 7.15 17.81 7.16C16.43 7.11 15.33 5.98 15.33 4.58C15.33 3.15 16.48 2 17.91 2C19.34 2 20.49 3.16 20.49 4.58C20.48 5.98 19.38 7.11 18 7.16Z"/>
      <path d="M16.9699 14.4402C18.3399 14.6702 19.8499 14.4302 20.9099 13.7202C22.3199 12.7802 22.3199 11.2402 20.9099 10.3002C19.8399 9.59016 18.3099 9.35016 16.9399 9.59016"/>
      <path d="M5.96998 7.16C6.02998 7.15 6.09998 7.15 6.15998 7.16C7.53998 7.11 8.63998 5.98 8.63998 4.58C8.63998 3.15 7.48998 2 6.05998 2C4.62998 2 3.47998 3.16 3.47998 4.58C3.48998 5.98 4.58998 7.11 5.96998 7.16Z"/>
      <path d="M6.99994 14.4402C5.62994 14.6702 4.11994 14.4302 3.05994 13.7202C1.64994 12.7802 1.64994 11.2402 3.05994 10.3002C4.12994 9.59016 5.65994 9.35016 7.02994 9.59016"/>
      <path d="M12 14.6307C11.94 14.6207 11.87 14.6207 11.81 14.6307C10.43 14.5807 9.32996 13.4507 9.32996 12.0507C9.32996 10.6207 10.48 9.4707 11.91 9.4707C13.34 9.4707 14.49 10.6307 14.49 12.0507C14.48 13.4507 13.38 14.5907 12 14.6307Z"/>
      <path d="M9.08997 17.7813C7.67997 18.7213 7.67997 20.2613 9.08997 21.2013C10.69 22.2713 13.31 22.2713 14.91 21.2013C16.32 20.2613 16.32 18.7213 14.91 17.7813C13.32 16.7213 10.69 16.7213 9.08997 17.7813Z"/>
    </svg>
  )
}

const Trench = ({ className, size = "md", variant = "stroke", ...props }: IconProps) => {
  if (variant === "filled") {
    return (
      <svg  
        className={cn(sizeMap[size], className)} 
        viewBox="0 0 24 24" 
        fill="currentColor" 
        stroke="none" {...props}
      >
        <path d="M16.83 15.6402C17.5 15.2002 18.38 15.6802 18.38 16.4802V17.7702C18.38 19.0402 17.39 20.4002 16.2 20.8002L13.01 21.8602C12.45 22.0502 11.54 22.0502 10.99 21.8602L7.8 20.8002C6.6 20.4002 5.62 19.0402 5.62 17.7702V16.4702C5.62 15.6802 6.5 15.2002 7.16 15.6302L9.22 16.9702C10.01 17.5002 11.01 17.7602 12.01 17.7602C13.01 17.7602 14.01 17.5002 14.8 16.9702L16.83 15.6402Z" />
        <path d="M19.98 6.46055L13.99 2.53055C12.91 1.82055 11.13 1.82055 10.05 2.53055L4.03002 6.46055C2.10002 7.71055 2.10002 10.5405 4.03002 11.8005L5.63002 12.8405L10.05 15.7205C11.13 16.4305 12.91 16.4305 13.99 15.7205L18.38 12.8405L19.75 11.9405V15.0005C19.75 15.4105 20.09 15.7505 20.5 15.7505C20.91 15.7505 21.25 15.4105 21.25 15.0005V10.0805C21.65 8.79055 21.24 7.29055 19.98 6.46055Z" />
      </svg>
    )
  }

  return (
    <svg
      className={cn(sizeMap[size], className)}
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <path d="M10.05 2.5293L4.03002 6.4593C2.10002 7.7193 2.10002 10.5393 4.03002 11.7993L10.05 15.7293C11.13 16.4393 12.91 16.4393 13.99 15.7293L19.98 11.7993C21.9 10.5393 21.9 7.7293 19.98 6.4693L13.99 2.5393C12.91 1.8193 11.13 1.8193 10.05 2.5293Z"/>
      <path d="M5.63 13.0801L5.62 17.7701C5.62 19.0401 6.6 20.4001 7.8 20.8001L10.99 21.8601C11.54 22.0401 12.45 22.0401 13.01 21.8601L16.2 20.8001C17.4 20.4001 18.38 19.0401 18.38 17.7701V13.1301"/>
      <path d="M21.4 15V9"/>
    </svg>
  )
}

const EditPass = ({ className, size = "md", variant = "stroke", ...props }: IconProps) => {
  if (variant === "filled") {
    return (
      <svg  
        className={cn(sizeMap[size], className)} 
        viewBox="0 0 24 24" 
        fill="currentColor" 
        stroke="none" {...props}
      >
        <path d="M18 4H15.75V2.75C15.75 2.34 15.41 2 15 2C14.59 2 14.25 2.34 14.25 2.75V21.25C14.25 21.66 14.59 22 15 22C15.41 22 15.75 21.66 15.75 21.25V20H18C20.21 20 22 18.21 22 16V8C22 5.79 20.21 4 18 4Z" />
        <path d="M6.5 4C4.29 4 2.5 5.79 2.5 8V16C2.5 18.21 4.29 20 6.5 20H11.5C12.05 20 12.5 19.55 12.5 19V5C12.5 4.45 12.05 4 11.5 4H6.5ZM6.67 12.38C6.62 12.5 6.55 12.61 6.46 12.71C6.36 12.8 6.25 12.87 6.13 12.92C6.01 12.97 5.88 13 5.75 13C5.62 13 5.49 12.97 5.37 12.92C5.25 12.87 5.14 12.8 5.04 12.71C4.95 12.61 4.88 12.5 4.82 12.38C4.77 12.26 4.75 12.13 4.75 12C4.75 11.74 4.86 11.48 5.04 11.29C5.09 11.25 5.14 11.21 5.19 11.17C5.25 11.13 5.31 11.1 5.37 11.08C5.43 11.05 5.49 11.03 5.55 11.02C5.89 10.95 6.23 11.06 6.46 11.29C6.64 11.48 6.75 11.74 6.75 12C6.75 12.13 6.72 12.26 6.67 12.38ZM10.17 12.38C10.12 12.5 10.05 12.61 9.96 12.71C9.86 12.8 9.75 12.87 9.63 12.92C9.51 12.97 9.38 13 9.25 13C9.12 13 8.99 12.97 8.87 12.92C8.75 12.87 8.64 12.8 8.54 12.71C8.35 12.52 8.25 12.27 8.25 12C8.25 11.87 8.28 11.74 8.33 11.62C8.38 11.49 8.45 11.39 8.54 11.29C8.91 10.92 9.58 10.92 9.96 11.29C10.14 11.48 10.25 11.74 10.25 12C10.25 12.13 10.22 12.26 10.17 12.38Z" />
      </svg>
    )
  }

  return (
    <svg
      className={cn(sizeMap[size], className)}
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <path d="M11.02 19.5H7.5C6.88 19.5 6.33 19.48 5.84 19.41C3.21 19.12 2.5 17.88 2.5 14.5V9.5C2.5 6.12 3.21 4.88 5.84 4.59C6.33 4.52 6.88 4.5 7.5 4.5H10.96"/>
      <path d="M15.02 4.5H16.5C17.12 4.5 17.67 4.52 18.16 4.59C20.79 4.88 21.5 6.12 21.5 9.5V14.5C21.5 17.88 20.79 19.12 18.16 19.41C17.67 19.48 17.12 19.5 16.5 19.5H15.02"/>
      <path d="M15 2V22"/>
      <path d="M11.0945 12H11.1035" />
      <path d="M7.09448 12H7.10346" />
    </svg>
  )
}

const Book = ({ className, size = "md", variant = "stroke", ...props }: IconProps) => {
  if (variant === "filled") {
    return (
      <svg  
        className={cn(sizeMap[size], className)} 
        viewBox="0 0 24 24" 
        fill="currentColor" 
        stroke="none" {...props}
      >
        <path d="M22 4.84969V16.7397C22 17.7097 21.21 18.5997 20.24 18.7197L19.93 18.7597C18.29 18.9797 15.98 19.6597 14.12 20.4397C13.47 20.7097 12.75 20.2197 12.75 19.5097V5.59969C12.75 5.22969 12.96 4.88969 13.29 4.70969C15.12 3.71969 17.89 2.83969 19.77 2.67969H19.83C21.03 2.67969 22 3.64969 22 4.84969Z" />
        <path d="M10.71 4.70969C8.87999 3.71969 6.10999 2.83969 4.22999 2.67969H4.15999C2.95999 2.67969 1.98999 3.64969 1.98999 4.84969V16.7397C1.98999 17.7097 2.77999 18.5997 3.74999 18.7197L4.05999 18.7597C5.69999 18.9797 8.00999 19.6597 9.86999 20.4397C10.52 20.7097 11.24 20.2197 11.24 19.5097V5.59969C11.24 5.21969 11.04 4.88969 10.71 4.70969ZM4.99999 7.73969H7.24999C7.65999 7.73969 7.99999 8.07969 7.99999 8.48969C7.99999 8.90969 7.65999 9.23969 7.24999 9.23969H4.99999C4.58999 9.23969 4.24999 8.90969 4.24999 8.48969C4.24999 8.07969 4.58999 7.73969 4.99999 7.73969ZM7.99999 12.2397H4.99999C4.58999 12.2397 4.24999 11.9097 4.24999 11.4897C4.24999 11.0797 4.58999 10.7397 4.99999 10.7397H7.99999C8.40999 10.7397 8.74999 11.0797 8.74999 11.4897C8.74999 11.9097 8.40999 12.2397 7.99999 12.2397Z" />
      </svg>
    )
  }

  return (
    <svg
      className={cn(sizeMap[size], className)}
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <path d="M22 16.7397V4.6697C22 3.4697 21.02 2.5797 19.83 2.6797H19.77C17.67 2.8597 14.48 3.9297 12.7 5.0497L12.53 5.1597C12.24 5.3397 11.76 5.3397 11.47 5.1597L11.22 5.0097C9.44 3.8997 6.26 2.8397 4.16 2.6697C2.97 2.5697 2 3.4697 2 4.6597V16.7397C2 17.6997 2.78 18.5997 3.74 18.7197L4.03 18.7597C6.2 19.0497 9.55 20.1497 11.47 21.1997L11.51 21.2197C11.78 21.3697 12.21 21.3697 12.47 21.2197C14.39 20.1597 17.75 19.0497 19.93 18.7597L20.26 18.7197C21.22 18.5997 22 17.6997 22 16.7397Z"/>
      <path d="M12 5.49023V20.4902"/>
      <path d="M7.75 8.49023H5.5"/>
      <path d="M8.5 11.4902H5.5"/>
    </svg>
  )
}

const SmsStar = ({ className, size = "md", variant = "stroke", ...props }: IconProps) => {
  if (variant === "filled") {
    return (
      <svg  
        className={cn(sizeMap[size], className)} 
        viewBox="0 0 24 24" 
        fill="currentColor" 
        stroke="none" {...props}
      >
        <path d="M19.48 2.82071L19.76 3.39071C19.9 3.67071 20.25 3.93071 20.56 3.99071L20.94 4.05071C22.08 4.24071 22.35 5.08071 21.53 5.91071L21.18 6.26071C20.95 6.50071 20.82 6.96071 20.89 7.28071L20.94 7.49071C21.25 8.87071 20.52 9.40071 19.32 8.68071L19.06 8.53071C18.75 8.35071 18.25 8.35071 17.94 8.53071L17.68 8.68071C16.47 9.41071 15.74 8.87071 16.06 7.49071L16.11 7.28071C16.18 6.96071 16.05 6.50071 15.82 6.26071L15.47 5.90071C14.65 5.07071 14.92 4.23071 16.06 4.04071L16.44 3.98071C16.74 3.93071 17.1 3.66071 17.24 3.38071L17.52 2.81071C18.06 1.73071 18.94 1.73071 19.48 2.82071Z" />
        <path d="M21.57 10.09C21.21 10.35 20.2 10.83 18.76 10.09C18.6 10.01 18.4 10 18.24 10.09C17.67 10.38 17.15 10.5 16.74 10.5C16.1 10.5 15.65 10.25 15.43 10.09C15.06 9.82 14.28 9.05 14.55 7.42C14.58 7.25 14.53 7.08 14.42 6.95C13.73 6.16 13.35 5.1 13.62 4.27C13.72 3.94 13.51 3.5 13.17 3.5H7C4 3.5 2 5 2 8.5V15.5C2 19 4 20.5 7 20.5H17C20 20.5 22 19 22 15.5V10.27C22 10.08 21.73 9.98 21.57 10.09ZM14.34 12.09C13.68 12.62 12.84 12.88 12 12.88C11.16 12.88 10.31 12.62 9.66 12.09L6.53 9.59C6.21 9.33 6.16 8.85 6.41 8.53C6.67 8.21 7.14 8.15 7.46 8.41L10.59 10.91C11.35 11.52 12.64 11.52 13.4 10.91C13.72 10.65 14.19 10.7 14.45 11.03C14.72 11.35 14.67 11.83 14.34 12.09Z" />
      </svg>
    )
  }

  return (
    <svg
      className={cn(sizeMap[size], className)}
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <path d="M22 11.5V15.5C22 19 20 20.5 17 20.5H7C4 20.5 2 19 2 15.5V8.5C2 5 4 3.5 7 3.5H12" />
      <path d="M7 9L10.13 11.5C11.16 12.32 12.85 12.32 13.88 11.5" />
      <path d="M19.48 2.81945L19.76 3.38945C19.9 3.66945 20.25 3.92945 20.56 3.98945L20.94 4.04945C22.08 4.23945 22.35 5.07945 21.53 5.90945L21.18 6.25944C20.95 6.49944 20.82 6.95944 20.89 7.27944L20.94 7.48945C21.25 8.86945 20.52 9.39944 19.32 8.67944L19.06 8.52944C18.75 8.34944 18.25 8.34944 17.94 8.52944L17.68 8.67944C16.47 9.40944 15.74 8.86945 16.06 7.48945L16.1099 7.27944C16.1799 6.95944 16.05 6.49944 15.82 6.25944L15.47 5.90945C14.65 5.07945 14.92 4.23945 16.06 4.04945L16.44 3.98945C16.74 3.93945 17.1 3.66945 17.24 3.38945L17.52 2.81945C18.06 1.72945 18.94 1.72945 19.48 2.81945Z"/>
    </svg>
  )
}

const Medal = ({ className, size = "md", variant = "stroke", ...props }: IconProps) => {
  if (variant === "filled") {
    return (
      <svg  
        className={cn(sizeMap[size], className)} 
        viewBox="0 0 24 24" 
        fill="currentColor" 
        stroke="none" {...props}
      >
        <path d="M17.8099 5.49V6.23L14.2699 4.18C12.9299 3.41 11.0599 3.41 9.72994 4.18L6.18994 6.24V5.49C6.18994 3.24 7.41994 2 9.66994 2H14.3299C16.5799 2 17.8099 3.24 17.8099 5.49Z" />
        <path d="M17.84 7.97023L17.7 7.90023L16.34 7.12023L13.52 5.49023C12.66 4.99023 11.34 4.99023 10.48 5.49023L7.66 7.11023L6.3 7.91023L6.12 8.00023C4.37 9.18023 4.25 9.40023 4.25 11.2902V15.8102C4.25 17.7002 4.37 17.9202 6.16 19.1302L10.48 21.6202C10.91 21.8802 11.45 21.9902 12 21.9902C12.54 21.9902 13.09 21.8702 13.52 21.6202L17.88 19.1002C19.64 17.9202 19.75 17.7102 19.75 15.8102V11.2902C19.75 9.40023 19.63 9.18023 17.84 7.97023ZM14.79 13.5002L14.18 14.2502C14.08 14.3602 14.01 14.5702 14.02 14.7202L14.08 15.6802C14.12 16.2702 13.7 16.5702 13.15 16.3602L12.26 16.0002C12.12 15.9502 11.89 15.9502 11.75 16.0002L10.86 16.3502C10.31 16.5702 9.89 16.2602 9.93 15.6702L9.99 14.7102C10 14.5602 9.93 14.3502 9.83 14.2402L9.21 13.5002C8.83 13.0502 9 12.5502 9.57 12.4002L10.5 12.1602C10.65 12.1202 10.82 11.9802 10.9 11.8602L11.42 11.0602C11.74 10.5602 12.25 10.5602 12.58 11.0602L13.1 11.8602C13.18 11.9902 13.36 12.1202 13.5 12.1602L14.43 12.4002C15 12.5502 15.17 13.0502 14.79 13.5002Z" />
      </svg>
    )
  }

  return (
    <svg
      className={cn(sizeMap[size], className)}
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <path d="M4.26001 11.0195V15.9895C4.26001 17.8095 4.26001 17.8095 5.98001 18.9695L10.71 21.6995C11.42 22.1095 12.58 22.1095 13.29 21.6995L18.02 18.9695C19.74 17.8095 19.74 17.8095 19.74 15.9895V11.0195C19.74 9.19945 19.74 9.19945 18.02 8.03945L13.29 5.30945C12.58 4.89945 11.42 4.89945 10.71 5.30945L5.98001 8.03945C4.26001 9.19945 4.26001 9.19945 4.26001 11.0195Z"/>
      <path d="M17.5 7.63V5C17.5 3 16.5 2 14.5 2H9.5C7.5 2 6.5 3 6.5 5V7.56"/>
      <path d="M12.63 10.9909L13.2 11.8809C13.29 12.0209 13.49 12.1609 13.64 12.2009L14.66 12.4609C15.29 12.6209 15.46 13.1609 15.05 13.6609L14.38 14.4709C14.28 14.6009 14.2 14.8309 14.21 14.9909L14.27 16.0409C14.31 16.6909 13.85 17.0209 13.25 16.7809L12.27 16.3909C12.12 16.3309 11.87 16.3309 11.72 16.3909L10.74 16.7809C10.14 17.0209 9.68002 16.6809 9.72002 16.0409L9.78002 14.9909C9.79002 14.8309 9.71002 14.5909 9.61002 14.4709L8.94002 13.6609C8.53002 13.1609 8.70002 12.6209 9.33002 12.4609L10.35 12.2009C10.51 12.1609 10.71 12.0109 10.79 11.8809L11.36 10.9909C11.72 10.4509 12.28 10.4509 12.63 10.9909Z"/>
    </svg>
  )
}

const Path = ({ className, size = "md", variant = "stroke", ...props }: IconProps) => {
  if (variant === "filled") {
    return (
      <svg  
        className={cn(sizeMap[size], className)} 
        viewBox="0 0 24 24" 
        fill="currentColor" 
        stroke="none" {...props}
      >
        <path d="M16.19 2H7.81C4.17 2 2 4.17 2 7.81V16.18C2 19.83 4.17 22 7.81 22H16.18C19.82 22 21.99 19.83 21.99 16.19V7.81C22 4.17 19.83 2 16.19 2ZM19.35 8.84C19.31 8.93 19.26 9.01 19.19 9.08L17.39 10.88C17.24 11.03 17.05 11.1 16.86 11.1C16.67 11.1 16.48 11.03 16.33 10.88C16.04 10.59 16.04 10.11 16.33 9.82L16.85 9.3H16.7C14.6 9.3 12.88 11.01 12.88 13.11V15.07V17.24C12.88 17.65 12.54 17.99 12.13 17.99C11.72 17.99 11.38 17.65 11.38 17.24V15.07V13.11C11.38 11.01 9.67 9.3 7.57 9.3H7.15L7.67 9.82C7.96 10.11 7.96 10.59 7.67 10.88C7.52 11.03 7.33 11.1 7.14 11.1C6.95 11.1 6.76 11.03 6.61 10.88L4.81 9.08C4.52 8.79 4.52 8.31 4.81 8.02L6.61 6.22C6.9 5.93 7.38 5.93 7.67 6.22C7.96 6.51 7.96 6.99 7.67 7.28L7.15 7.8H7.58C9.53 7.8 11.22 8.87 12.14 10.44C13.06 8.87 14.75 7.8 16.71 7.8H16.86L16.34 7.28C16.05 6.99 16.05 6.51 16.34 6.22C16.63 5.93 17.11 5.93 17.4 6.22L19.2 8.02C19.27 8.09 19.32 8.17 19.36 8.26C19.43 8.45 19.43 8.66 19.35 8.84Z" />
      </svg>
    )
  }

  return (
    <svg
      className={cn(sizeMap[size], className)}
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <path d="M12.1401 15.0691V13.1091C12.1401 10.5891 14.1801 8.53906 16.7101 8.53906H18.6701"/>
      <path d="M5.62012 8.55078H7.58014C10.1001 8.55078 12.1501 10.5908 12.1501 13.1208V13.7708V17.2508"/>
      <path d="M7.14008 6.75L5.34009 8.55L7.14008 10.35"/>
      <path d="M16.8601 6.75L18.6601 8.55L16.8601 10.35"/>
      <path d="M9 22H15C20 22 22 20 22 15V9C22 4 20 2 15 2H9C4 2 2 4 2 9V15C2 20 4 22 9 22Z"/>
    </svg>
  )
}

// Map of icon components
const iconComponents: Record<string, React.FC<IconProps>> = {
  // Icons with stroke variants
  "icon-plus": Plus,
  "icon-minus": Minus,
  "icon-info": Info,
  "icon-three-dots": ThreeDots,
  "icon-trash": Trash,
  "icon-shooting-star": ShootingStar,
  "icon-search-heart": SearchHeart,
  "icon-ranking": Ranking,
  "icon-profile": Profile,
  "icon-log-out": LogOut,
  "icon-link": Link,
  "icon-chevron-up": ChevronUp,
  "icon-chevron-down": ChevronDown,
  "icon-chevron-right": ChevronRigth,
  "icon-chevron-left": ChevronLeft,
  "icon-crossed-eye": CrossedEye,
  "icon-eye": Eye,
  "icon-search": Search,
  "icon-filter": Filter,
  "icon-tick": Tick,

  // Icons with both filled and stroke variants
  "icon-pencil": Pencil,
  "icon-checklist": Checklist,
  "icon-clipboard": Clipboard,
  "icon-home": Home,
  "icon-settings": Settings,
  "icon-chart": Chart,
  "icon-team": Team,
  "icon-trench": Trench,
  "icon-edit-pass": EditPass,
  "icon-book": Book,
  "icon-sms-star": SmsStar,
  "icon-medal": Medal,
  "icon-path": Path,
}

// Define which icons have filled variants
const hasFilledVariant: Record<string, boolean> = {
  "icon-pencil": true,
  "icon-checklist": true,
  "icon-clipboard": true,
  "icon-home": true,
  "icon-settings": true,
  "icon-chart": true,
  "icon-team": true,
  "icon-trench": true,
  "icon-edit-pass": true,
  "icon-book": true,
  "icon-sms-star": true,
  "icon-medal": true,
  "icon-path": true,
}

// Type for icon names to enable type checking
export type IconName = keyof typeof iconComponents

// Icon component for usage with type checking
export function Icon({
  name,
  className,
  size = "md",
  variant = "stroke",
  ...props
}: Omit<IconProps, "name"> & { name: IconName | string }) {
  // Check if the name exists in our icon components
  const IconComponent = iconComponents[name as string]

  if (!IconComponent) {
    console.warn(`Icon "${name}" not found`)
    return null
  }

  // If variant is "filled" but the icon doesn't support it, fall back to "stroke"
  const iconHasFilledVariant = hasFilledVariant[name as string] ?? false
  const finalVariant = variant === "filled" && !iconHasFilledVariant ? "stroke" : variant

  return <IconComponent className={className} size={size} variant={finalVariant} {...props} />
}
